;==========================================================================
;
; CMD_FLUSH_SHADOW
;
; PARAM1 - NPACKS
;
;==========================================================================
;   VI00    Const (0)
;   VI01
;   VI02    ADCCount
;   VI03    Const (0x8000)
;   VI04    Verts 0 & 2 indices
;   VI05    Verts 1 & 3 indices
;   VI06    Num Verts
;   VI07    Num 4-loops
;   VI08    Src ptr
;   VI09    Command param 1 - NPACKS
;   VI10    Destination Addr (Command param 2 - Unused)
;   VI11    Opcode from latest command
;   VI12    GIF packet buffer base address (for double buffering)
;   VI13    RESERVED - Next command address in input buffer for kernel
;   VI14    RESERVED - Current address of input buffer for kernel
;   VI15    RESERVED - Return address for function calls
;==========================================================================
;   VF00    Const x=0 y=0 z=0 w=1
;   VF01
;   VF02    
;   VF03    V0 xyz
;   VF04    V0 rgb
;   VF05
;   VF06    V1 xyz
;   VF07    V1 rgb
;   VF08
;   VF09    Strip Giftag
;   VF10    Tri Giftag
;   VF11
;   VF12
;   VF13
;   VF14
;   VF15
;   VF16
;   VF17
;   VF18
;   VF19
;   VF20
;   VF21
;   VF22
;   VF23
;   VF24
;   VF25
;L  VF26    Const (0, 0, 0, 128)
;   VF27    Light color matrix qword 0    
;   VF28    Light color matrix qword 1    
;   VF29    Light color matrix qword 2    
;   VF30    Light color matrix qword 3    
;S  VF31    Const (128, 16, 0.5, 4095)
;==========================================================================

CMD_FLUSH_SHADOW:

        ;// vi01        clip results
        ;// vi02        ADC count
        ;// vi03        ADC bit
        ;// vi04        Cache Index
        ;// vi05        temp mask for clipping
        ;// vi06        NVerts
        ;// vi07        N4-loops
        ;// vi08        pSrc
        ;// vi09        NPacks
        ;// vi10        pDest
        ;// vf03        xyz0
        ;// vf04        rgb0
        ;// vf15        fixed version of vert
        ;// vf16        temp
        ;// vf17        temp
        ;// vf18        min coords (0,0,0,0)
        ;// vf19        max coords (4095,4095,134217728,0)

        ;//nop[d]                          nop

        ;// load giftags into registers
        sub.xyzw vf19, vf00, vf00       lq.xyzw vf09, 1(vi14)
        sub.xyzw vf18, vf00, vf00       iaddi vi08, vi14, 3

        ;// load const 0x8000 into vi03
        nop                             iaddiu vi03, vi00, 0x7fff
        nop                             iaddiu vi03, vi03, 0x01

        ;// Write giftag to destination buffers and set up min/max coords
        nop                             iaddiu vi04, vi00, OUTPUT_BUFFER_BASE
        nop                             sq.xyzw vf09, 0(vi04)
        nop                             loi 4095.0
        addi.xy  vf19, vf19, i          iaddiu vi04, vi04, OUTPUT_BUFFER_SIZE
        nop                             loi 134217728.0
        addi.z   vf19, vf19, i          sq.xyzw vf09, 0(vi04)

SHADOW_PACK_LOOP:
        ;// Gather up some useful info
        nop                             iaddi vi10, vi12, -1    ; pDest-2 (because we'll do pre-increment)
        nop                             ilw.x vi07, 0(vi08)     ; N4-loops
        nop                             ilw.y vi06, 0(vi08)     ; NVerts
        nop                             iaddi vi08, vi08, 1     ; pSrc++

        ;// prime loop by reading first cache index
        nop                             ilw.x vi04, 0(vi08)     ; load ci0

        ;// setup giftag with correct number of verts
        nop                             iadd vi06, vi06, vi03   ; tag on the EOP bit
        nop                             isw.x vi06, 0(vi12)     ; store NVerts in giftag

        ;// set the start ADC count to zero
        nop                             iaddi vi02, vi00, 0

SHADOW_FLUSH_VERT_LOOP:

        ;// vert 0
/*        nop[d]                          nop

        ;//#### JUST TRYING SOME SILLY STUFF TRYING TO FIGURE OUT HOW
        ;//     THE MAC STATUS REGISTER WORKS
        subw.xyzw vf03, vf00, vf00w     nop
        subw.xyzw vf04, vf00, vf00w     nop
        nop                             nop
        nop                             nop
        nop                             nop
        sub.xyzw  vf16, vf03, vf00      nop
        nop                             nop
        nop                             nop
        nop                             nop
        nop                             nop
        nop                             nop
        sub.xyzw  vf17, vf00, vf03      nop
        nop                             nop
        nop                             nop
        nop                             nop
        nop                             nop
        mulaw.xyzw  acc, vf30, vf00w    nop
        maddaz.xyzw acc, vf29, vf03z    nop
        madday.xyzw acc, vf28, vf03y    nop
        maddx.xyzw vf04, vf28, vf03x    nop*/

        ;//[d]                          nop

        nop                             lq.xyz  vf03, 0(vi04)           ; load xyz0
        nop                             lq.xyzw vf04, 128(vi04)         ; load rgb0
        nop                             iaddi vi10, vi10, 2             ; ++pDest
        nop                             iaddi vi07, vi07, -1            ; N4-loops--
        sub.xyz   vf16, vf18, vf03      nop                             ; clip test xyz0
        sub.xyz   vf17, vf03, vf19      iaddiu vi01, vi00, 0x00e0       ; clip test xyz0
        ftoi4.xyz vf15, vf03            isw.w  vi04, 1(vi10)            ; store adc0
        nop                             ilw.y vi04, 0(vi08)             ; load ci1
        nop                             fmand vi05, vi01                ; clip test xyz0
        nop                             fmand vi05, vi05                ; clip test xyz0
        nop                             ibne vi01, vi05, FAIL_TEST_0    ; clip test xyz0
        nop                             sq.xyzw vf04, 0(vi10)           ; store rgb0 (BDS)
FAIL_RET_0:
        nop                             ibeq vi02, vi00, SKIP_ADC_SET_0
        nop                             sq.xyz vf15, 1(vi10)            ; store xyz0
        nop                             isw.w vi03, 1(vi10)             ; store adc0
        nop                             iaddi vi02, vi02, -1            ; NAdcSets--
SKIP_ADC_SET_0:

        ;// vert 1
        nop                             lq.xyz  vf03, 0(vi04)           ; load xyz1
        nop                             lq.xyzw vf04, 128(vi04)         ; load rgb1
        nop                             iaddi vi10, vi10, 2             ; ++pDest
        nop                             nop
        sub.xyz   vf16, vf18, vf03      nop                             ; clip test xyz1
        sub.xyz   vf17, vf03, vf19      iaddiu vi01, vi00, 0x00e0       ; clip test xyz1
        ftoi4.xyz vf15, vf03            isw.w  vi04, 1(vi10)            ; store adc1
        nop                             ilw.z  vi04, 0(vi08)            ; load ci2
        nop                             fmand vi05, vi01                ; clip test xyz1
        nop                             fmand vi05, vi05                ; clip test xyz1
        nop                             ibne vi01, vi05, FAIL_TEST_1    ; clip test xyz1
        nop                             sq.xyzw vf04, 0(vi10)           ; store rgb1 (BDS)
FAIL_RET_1:
        nop                             ibeq vi02, vi00, SKIP_ADC_SET_1
        nop                             sq.xyz vf15, 1(vi10)            ; store xyz1
        nop                             isw.w vi03, 1(vi10)             ; store adc1
        nop                             iaddi vi02, vi02, -1            ; NAdcSets--
SKIP_ADC_SET_1:

        ;// vert 2
        nop                             lq.xyz  vf03, 0(vi04)           ; load xyz2
        nop                             lq.xyzw vf04, 128(vi04)         ; load rgb2
        nop                             iaddi vi10, vi10, 2             ; ++pDest
        nop                             nop
        sub.xyz   vf16, vf18, vf03      nop                             ; clip test xyz2
        sub.xyz   vf17, vf03, vf19      iaddiu vi01, vi00, 0x00e0       ; clip test xyz2
        ftoi4.xyz vf15, vf03            isw.w  vi04, 1(vi10)            ; store adc2
        nop                             ilw.w  vi04, 0(vi08)            ; load ci3
        nop                             fmand vi05, vi01                ; clip test xyz2
        nop                             fmand vi05, vi05                ; clip test xyz2
        nop                             ibne vi01, vi05, FAIL_TEST_2    ; clip test xyz2
        nop                             sq.xyzw vf04, 0(vi10)           ; store rgb2 (BDS)
FAIL_RET_2:
        nop                             ibeq vi02, vi00, SKIP_ADC_SET_2
        nop                             sq.xyz vf15, 1(vi10)            ; store xyz2
        nop                             isw.w vi03, 1(vi10)             ; store adc1
        nop                             iaddi vi02, vi02, -1            ; NAdcSets--
SKIP_ADC_SET_2:

        ;// vert 3
        nop                             lq.xyz  vf03, 0(vi04)           ; load xyz3
        nop                             lq.xyzw vf04, 128(vi04)         ; load rgb2
        nop                             iaddi vi10, vi10, 2             ; ++pDest
        nop                             nop
        sub.xyz   vf16, vf18, vf03      nop                             ; clip test xyz3
        sub.xyz   vf17, vf03, vf19      iaddiu vi01, vi00, 0x00e0       ; clip test xyz3
        ftoi4.xyz vf15, vf03            isw.w  vi04, 1(vi10)            ; store adc3
        nop                             ilw.x  vi04, 1(vi08)            ; load ci0
        nop                             fmand vi05, vi01                ; clip test xyz3
        nop                             fmand vi05, vi05                ; clip test xyz3
        nop                             ibne vi01, vi05, FAIL_TEST_3    ; clip test xyz3
        nop                             sq.xyzw vf04, 0(vi10)           ; store rgb3 (BDS)
FAIL_RET_3:
        nop                             ibeq vi02, vi00, SKIP_ADC_SET_3
        nop                             sq.xyz vf15, 1(vi10)            ; store xyz3
        nop                             isw.w vi03, 1(vi10)             ; store adc3
        nop                             iaddi vi02, vi02, -1            ; NAdcSets--
SKIP_ADC_SET_3:

        ;// loop
        nop                             ibne vi07, vi00, SHADOW_FLUSH_VERT_LOOP
        nop                             iaddi vi08, vi08, 1

        ;// kick
        nop                             nop
        nop                             nop
        nop                             nop
        nop                             xgkick vi12

        ;// swap output buffers and loop for new pack
        nop                             iaddiu vi04, vi00, OUTPUT_BUFFER_BASE
        nop                             iaddi vi09, vi09, -1
        nop                             ibeq vi12, vi04, SHADOW_FLUSH_TOGGLE_OUTPUT
        nop                             iaddiu vi12, vi00, (OUTPUT_BUFFER_BASE+OUTPUT_BUFFER_SIZE)
        nop                             iaddiu vi12, vi00, OUTPUT_BUFFER_BASE
SHADOW_FLUSH_TOGGLE_OUTPUT:
        nop                             ibne vi09, vi00, SHADOW_PACK_LOOP
        nop                             nop


        nop                             b KERNEL_RET
        nop                             nop

;// handling failed culling tests
;// IMPORTANT: DON'T ATTEMPT TO PUT THE iaddi INSTRUCTION IN THE BRANCH DELAY SLOT. IT
;// NEEDS TO BE SET FOR THE NEXT STATEMENT IMMEDIATELY AFTER THE BRANCH.

FAIL_TEST_0:
        nop                             iaddi vi02, vi00, 3         ; start setting adc bits
        nop                             b FAIL_RET_0
        nop                             nop

FAIL_TEST_1:
        nop                             iaddi vi02, vi00, 3         ; start setting adc bits
        nop                             b FAIL_RET_1
        nop                             nop

FAIL_TEST_2:
        nop                             iaddi vi02, vi00, 3
        nop                             b FAIL_RET_2
        nop                             nop

FAIL_TEST_3:
        nop                             iaddi vi02, vi00, 3
        nop                             b FAIL_RET_3
        nop                             nop

/*

SHADOW_FLUSH_VERT_LOOP:

        ; vert 0
        NOP                             LQ.xyz  VF03, 0(VI04)               ; 0) load xyz
        NOP                             LQ.xyzw VF04, 128(VI04)             ; 0) load color
        NOP                             ILW.y VI05, 0(VI08)                 ; 1) load cache index (also holds ADC bit)
        NOP                             IADDI VI07, VI07, -1                ; decrement loop counter
        CLIPw.xyz VF03, VF31w           NOP                                 ; 0) Get clipflags for R&B
        NOP                             NOP
        NOP                             NOP
        NOP                             NOP
        NOP                             FCAND VI01, 0x000005                ; 0) R&B clip test
        CLIPw.xyz VF03, VF26w           IBNE VI01, VI00, FAIL_TEST_0        ; 0) Get clipflags for T&L  0) R&B clip test
        NOP                             NOP
        NOP                             NOP
        NOP                             NOP
        NOP                             FCOR VI01, 0xfffffa                 ; 0) T&L clip test
        CLIPw.xyz VF03, VF25w           IBEQ VI01, VI00, FAIL_TEST_0        ; 0) Get clipflags for NrZ  0) T&L clip test
        NOP                             NOP
        NOP                             NOP
        NOP                             NOP
        FTOI4.xyz VF03, VF03            FCAND VI01, 0x000010                ; 0) Convert to fixed       0) NrZ clip test
        NOP                             IBNE VI01, VI00, FAIL_TEST_0        ; 0) NrZ clip test
        NOP                             NOP
SUCCESS_0:
        NOP                             IBEQ VI02, VI00, SKIP_ADC_SET_0     ; 0) should we set the ADC bit?
        NOP                             SQI.xyzw VF04, (VI10++)             ; 0) store color (BDS)
        NOP                             IOR VI04, VI04, VI03                ; 0) OR in the ADC bit
        NOP                             IADDI VI02, VI02, -1                ; 0) NAdcSets--
SKIP_ADC_SET_0:
        NOP                             ISW.w VI04, 0(VI10)                 ; 0) store the ADC bit
        NOP                             SQI.xyz  VF03, (VI10++)             ; 0) store the XYZ

        ; vert 1
        NOP                             LQ.xyz  VF03, 0(VI05)               ; 1) load xyz
        NOP                             LQ.xyzw VF04, 128(VI05)             ; 1) load color
        NOP                             ILW.z VI04, 0(VI08)                 ; 2) load cache index (also holds ADC bit)
        NOP                             NOP
        CLIPw.xyz VF03, VF31w           NOP                                 ; 1) Get clipflags for R&B
        NOP                             NOP
        NOP                             NOP
        NOP                             NOP
        NOP                             FCAND VI01, 0x000005                ; 1) R&B clip test
        CLIPw.xyz VF03, VF26w           IBNE VI01, VI00, FAIL_TEST_1        ; 1) Get clipflags for T&L  1) R&B clip test
        NOP                             NOP
        NOP                             NOP
        NOP                             NOP
        NOP                             FCOR VI01, 0xfffffa                 ; 1) T&L clip test
        CLIPw.xyz VF03, VF25w           IBEQ VI01, VI00, FAIL_TEST_1        ; 1) Get clipflags for NrZ  1) T&L clip test
        NOP                             NOP
        NOP                             NOP
        NOP                             NOP
        FTOI4.xyz VF03, VF03            FCAND VI01, 0x000010                ; 1) Convert to fixed       1) NrZ clip test
        NOP                             IBNE VI01, VI00, FAIL_TEST_1        ; 1) NrZ clip test
        NOP                             NOP
SUCCESS_1:
        NOP                             IBEQ VI02, VI00, SKIP_ADC_SET_1     ; 1) should we set the ADC bit?
        NOP                             SQI.xyzw VF04, (VI10++)             ; 1) store color (BDS)
        NOP                             IOR VI05, VI05, VI03                ; 1) OR in the ADC bit
        NOP                             IADDI VI02, VI02, -1                ; 1) NAdcSets--
SKIP_ADC_SET_1:
        NOP                             ISW.w VI05, 0(VI10)                 ; 1) store the ADC bit
        NOP                             SQI.xyz  VF03, (VI10++)             ; 1) store the XYZ

        ; vert 2
        NOP                             LQ.xyz  VF03, 0(VI04)               ; 2) load xyz
        NOP                             LQ.xyzw VF04, 128(VI04)             ; 2) load color
        NOP                             ILW.w VI05, 0(VI08)                 ; 3) load cache index (also holds ADC bit)
        NOP                             NOP
        CLIPw.xyz VF03, VF31w           NOP                                 ; 2) Get clipflags for R&B
        NOP                             NOP
        NOP                             NOP
        NOP                             NOP
        NOP                             FCAND VI01, 0x000005                ; 2) R&B clip test
        CLIPw.xyz VF03, VF26w           IBNE VI01, VI00, FAIL_TEST_2        ; 2) Get clipflags for T&L  2) R&B clip test
        NOP                             NOP
        NOP                             NOP
        NOP                             NOP
        NOP                             FCOR VI01, 0xfffffa                 ; 2) T&L clip test
        CLIPw.xyz VF03, VF25w           IBEQ VI01, VI00, FAIL_TEST_2        ; 2) Get clipflags for NrZ  2) T&L clip test
        NOP                             NOP
        NOP                             NOP
        NOP                             NOP
        FTOI4.xyz VF03, VF03            FCAND VI01, 0x000010                ; 2) Convert to fixed       2) NrZ clip test
        NOP                             IBNE VI01, VI00, FAIL_TEST_2        ; 2) NrZ clip test
        NOP                             NOP
SUCCESS_2:
        NOP                             IBEQ VI02, VI00, SKIP_ADC_SET_2     ; 2) should we set the ADC bit?
        NOP                             SQI.xyzw VF04, (VI10++)             ; 2) store color (BDS)
        NOP                             IOR VI04, VI04, VI03                ; 2) OR in the ADC bit
        NOP                             IADDI VI02, VI02, -1                ; 2) NAdcSets--
SKIP_ADC_SET_2:
        NOP                             ISW.w VI04, 0(VI10)                 ; 2) store the ADC bit
        NOP                             SQI.xyz  VF03, (VI10++)             ; 2) store the XYZ

        ; vert 3
        NOP                             LQ.xyz  VF03, 0(VI05)               ; 3) load xyz
        NOP                             LQ.xyzw VF04, 128(VI05)             ; 3) load color
        NOP                             ILW.x VI04, 1(VI08)                 ; 0) load cache index (also holds ADC bit) (use offset of 1 because VI08 hasn't been incremented yet!)
        NOP                             NOP
        CLIPw.xyz VF03, VF31w           NOP                                 ; 3) Get clipflags for R&B
        NOP                             NOP
        NOP                             NOP
        NOP                             NOP
        NOP                             FCAND VI01, 0x000005                ; 3) R&B clip test
        CLIPw.xyz VF03, VF26w           IBNE VI01, VI00, FAIL_TEST_3        ; 3) Get clipflags for T&L  3) R&B clip test
        NOP                             NOP
        NOP                             NOP
        NOP                             NOP
        NOP                             FCOR VI01, 0xfffffa                 ; 3) T&L clip test
        CLIPw.xyz VF03, VF25w           IBEQ VI01, VI00, FAIL_TEST_3        ; 3) Get clipflags for NrZ  3) T&L clip test
        NOP                             NOP
        NOP                             NOP
        NOP                             NOP
        FTOI4.xyz VF03, VF03            FCAND VI01, 0x000010                ; 3) Convert to fixed       3) NrZ clip test
        NOP                             IBNE VI01, VI00, FAIL_TEST_3        ; 3) NrZ clip test
        NOP                             NOP
SUCCESS_3:
        NOP                             IBEQ VI02, VI00, SKIP_ADC_SET_3     ; 3) should we set the ADC bit?
        NOP                             SQI.xyzw VF04, (VI10++)             ; 3) store color (BDS)
        NOP                             IOR VI05, VI05, VI03                ; 3) OR in the ADC bit
        NOP                             IADDI VI02, VI02, -1                ; 3) NAdcSets--
SKIP_ADC_SET_3:
        NOP                             ISW.w VI05, 0(VI10)                 ; 3) store the ADC bit
        NOP                             SQI.xyz  VF03, (VI10++)             ; 3) store the XYZ

        NOP                             IBNE VI07, VI00, SHADOW_FLUSH_VERT_LOOP           
        NOP                             IADDI VI08, VI08, 1

;------------------------------------------------------------------------


        ; KICK
		NOP								NOP
		NOP								NOP
		NOP								NOP
        NOP                             XGKICK VI12                 ; kick gif to render package 

        ; Swap output buffers ; Decrement NPacks counter and loop for new pack
        NOP                             IADDIU VI04, VI00, OUTPUT_BUFFER_BASE
        NOP                             IADDI VI09, VI09, -1            ; decrement loop counter
        NOP                             IBEQ   VI12, VI04, SHADOW_FLUSH_TOGGLE_OUTPUT_LABEL
        NOP                             IADDIU VI12, VI00, (OUTPUT_BUFFER_BASE+OUTPUT_BUFFER_SIZE)
        NOP                             IADDIU VI12, VI00, OUTPUT_BUFFER_BASE
SHADOW_FLUSH_TOGGLE_OUTPUT_LABEL:
        NOP                             IBNE VI09, VI00, SHADOW_PACK_LOOP
        NOP                             NOP ;BDS      


        NOP                             B KERNEL_RET                    ; Return to kernel 
        NOP                             NOP


;------------------------------------------------------------------------
; handling failed culling tests
;------------------------------------------------------------------------

FAIL_TEST_0:
        NOP                             IADDI VI02, VI00, 3         ; 0) Start setting ADC bits
        NOP                             B SUCCESS_0
        NOP                             NOP                         ; (BDS)

FAIL_TEST_1:
        NOP                             IADDI VI02, VI00, 3         ; 1) Start setting ADC bits
        NOP                             B SUCCESS_1
        NOP                             NOP                         ; (BDS)

FAIL_TEST_2:
        NOP                             IADDI VI02, VI00, 3         ; 2) Start setting ADC bits
        NOP                             B SUCCESS_2
        NOP                             NOP                         ; (BDS)

FAIL_TEST_3:
        NOP                             IADDI VI02, VI00, 3         ; 3) Start setting ADC bits
        NOP                             B SUCCESS_3
        NOP                             NOP                         ; (BDS)
        */
