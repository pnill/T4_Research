////////////////////////////////////////////////////////////////////////////
//
// GC_DVD.hpp
//
////////////////////////////////////////////////////////////////////////////

#ifndef GC_DVD_HPP_INCLUDED
#define GC_DVD_HPP_INCLUDED


////////////////////////////////////////////////////////////////////////////
// INCLUDES
////////////////////////////////////////////////////////////////////////////

#include "x_types.hpp"
#include "x_stdio.hpp"


////////////////////////////////////////////////////////////////////////////
// TYPES
////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////
// GC_DVD_MsgFunc
//
// When the GameCube finds a read error, we are required to display proper
// messages to inform the user of the action that must be taken to recover
// from the error.  The five errors listed in eGC_DVD_Messages below MUST be
// accounted for.  The GC_DVD_MsgFunc type is the function that should be
// supplied to handle the display of these messages, and this function will
// be called once every chance it gets (up to the function to handle page
// flips).  If no function is set using GC_SetMessageFunction, then Quagmire
// will default to displaying simple text.
////////////////////////////////////////////////////////////////////////////

typedef void (*GC_DVD_MsgFunc)( s32 Message );


////////////////////////////////////////////////////////////////////////////
// QSyncReadCallback
//
// During a synchronous read, if this callback is present it will be called
// while the read is waiting to be completed.  Useful for displaying status
// of sync. reads.  Use GCDVD_SetReadCallback() to set, pass NULL if no
// callback is desired.
//
////////////////////////////////////////////////////////////////////////////

typedef void (*QSyncReadCallback)( void );


////////////////////////////////////////////////////////////////////////////
// DEFINES
////////////////////////////////////////////////////////////////////////////

enum eGC_DVD_Messages
{
    GC_DVD_MSG_NODISK,
    GC_DVD_MSG_COVEROPEN,
    GC_DVD_MSG_WRONGDISK,
    GC_DVD_MSG_RETRYERROR,
    GC_DVD_MSG_FATALERROR,

    GC_DVD_MSG_DONE, // Message that tell function the read is finished (to refresh to old display)

    GC_DVD_MSG_COUNT,
};

////////////////////////////////////////////////////////////////////////////
// PROTOTYPES
////////////////////////////////////////////////////////////////////////////

err  DVD_InitModule( void );
void DVD_KillModule( void );

void GC_SetMessageFunction( GC_DVD_MsgFunc MsgFunc );

void GC_CheckDriveStatus( void );

void GCDVD_SetReadCallback( QSyncReadCallback CallbackFunc );


////////////////////////////////////////////////////////////////////////////

#endif // GC_DVD_HPP_INCLUDED
