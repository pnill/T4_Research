/********************************************************************************
*                                                                               *
* Tri-Strip Preprocessing vertex lighting                                       *
*                                                                               *
*********************************************************************************
*                                                                               *
* Basics:                                                                       *
*   This lighting model uses 3 directional lights in the form of a matrix       *
*   There is a secondary matrix comprised of 4 colors, 1 for each light and 1   *
*       for ambient                                                             *
*   The lighting code takes into account if the vertex is meant to be           *
*       environment mapped later                                                *
*       The size of an environment mapped vert is different from a non-         *
*           envmapped vert                                                      *
*       The code builds a stride based on vert size - the actual code           *
*           difference between envmapped and non-envmapped is minimal           *
*               Are we envmapping, too?                                         *
*               if so, the output is the input + 1                              *
*               otherwise, the output is the same as the input                  *
*   This code builds a color value based on the contribution of each light and  *
*       the ambient                                                             *
*       The resulting color value is stored in the "color slot" of the original *
*           vertex.                                                             *
*           Non-envmapped Vert:                                                 *
*               Input Format        Output Format                               *
*                UV                  UV                                         *
*                Normal              Color                                      *
*                Pos                 Pos                                        *
*           Envmapped Vert:                                                     *
*               Input Format        Output Format                               *
*                UV                  UV                                         *
*                Normal              Normal                                     *
*                Garbage             Color (generated by this code)             *
*                Pos                 Pos                                        *
*                                                                               *
* Registers:                                                                    *
*   "System" reserved - please do not modifiy (save and restore if necessary)   *
*       vi11                envmapping flag                                     *
*       vi12                clip-flag                                           *
*       vi13                submesh flags                                       *
*       vi14                itop                                                *
*       vi15                return address                                      *
*   Local Usage                                                                 *
*       Integer:                                                                *
*       Floating:                                                               *
*           Constants:                                                          *
*               vf17-vf19   Normalized Local to View Matrix (just rotation)     *
*               vf24-vf27   Light Color Matrix                                  *
*               vf28-vf30   Light Direction Matrix                              *
*           Working Variables:                                                  *
*               vf01-vf07   Working Normals                                     *
*               vf08-vf14   Working Color results                               *
*                                                                               *
********************************************************************************/


/********************************************************************************
*********************************************************************************
*********************************************************************************
*                                                                               *
* This code is currently unoptimized                                            *
*   Future Changes:                                                             *
*       "unrolling" of the loop to pack instructions                            *
*           Trying to fit up to 7 color calculations in a single loop           *
*                                                                               *
*********************************************************************************
*********************************************************************************
********************************************************************************/



TRI_STRIP_LIGHT:
    ; load the lighting matrices (direction, color, NL2W)
    ; grab the vert count (at itop.X)
    ; transform the light direction matrix by the NL2W matrix (LightDir*NL2W)
    ; loop on vert count
    ;   load a vert's normal
    ;   DOT the normal with the transformed light direction matrix
    ;   clamp the minimum DOT value at 0
    ;   multiply by the light color matrixt to gen a color (RGB1) 
    ;   clamp the maximum color values at 255
    ;   convert to fixed point
    ;   test for finished (if so, jump out of the loop
    
    nop                                 ilw.x vi04, 0(vi14)x
    nop                                 iaddiu vi01, vi14, 3                                    ;get addr 1st vert
    nop                                 nop
    nop                                 iaddiu vi10, vi00, 0
    nop                                 ibeq vi04, vi00, TRI_STRIP_LIGHT_END
    nop                                 nop
    nop                                 ibeq vi11, vi00, TRI_STRIP_LIGHT_3VERT
    nop                                 iaddiu vi03, vi04, 0
    nop                                 iaddiu vi10, vi10, 1
TRI_STRIP_LIGHT_3VERT:
    nop                                 iaddiu vi06, vi00, MATRIX_LIGHT_COL_ADDR
    nop                                 lq.xyzw vf16, 0(vi06)               ; COLOR0
    nop                                 lq.xyzw vf17, 1(vi06)               ; COLOR1
    nop                                 lq.xyzw vf18, 2(vi06)               ; COLOR2
    nop                                 lq.xyzw vf19, 3(vi06)               ; COLOR3(ambient)
    nop                                 iaddiu vi05, vi00, MATRIX_LIGHT_DIR_ADDR
    nop                                 lq.xyzw vf30, 2(vi05)               ;                   ;load LDIR col2
    nop                                 lq.xyzw vf29, 1(vi05)               ;                   ;load LDIR col1
    nop                                 lq.xyzw vf01, 1(vi01)                                   ;load normal
    nop                                 lq.xyzw vf28, 0(vi05)               ;                   ;load LDIR col0
    nop                                 iaddiu vi02, vi00, 3                                    ;build stride=3
    nop                                 iadd vi02, vi02, vi10                                   ;if envmap,stride=4
    
TRI_STRIP_LIGHT_LOOP:
    mulaz.xyz   acc, vf30, vf01z        nop                                 ; light dot0
    madday.xyz  acc, vf29, vf01y        nop                                 ; light dot0
    maddx.xyz  vf08, vf28, vf01x        nop                                 ; light dot0
    nop                                 nop
    nop                                 nop
    nop                                 nop
    maxx.xyz   vf08, vf08, vf00x        nop                                 ; clamp dot<0
    nop                                 nop
    nop                                 nop
    mulaw.xyzw  acc, vf19, vf00w        nop                                 ; calc rgb0
    maddaz.xyzw acc, vf18, vf08z        nop                                 ; calc rgb0
    madday.xyzw acc, vf17, vf08y        nop                                 ; calc rgb0
    maddx.xzyw vf08, vf16, vf08x        nop                                 ; calc rgb0
    nop                                 nop
    nop                                 nop
    nop                                 LOI 255.0                           ;                   ;load 255 for clamp
    minii.xyzw vf08, vf08, i            nop                                 ; clamp rgb>255
    nop                                 nop
    nop                                 nop
    nop                                 nop
    ftoi0.xyzw vf08, vf08               nop                                 ; rgb0->fixed
    nop                                 nop
    nop                                 iadd vi01, vi01, vi02                                   ;move addr by stride
    nop                                 iaddi vi03, vi03, -1                                    ;nVerts--
    nop                                 sq.xyzw vf08, -2(vi01)                                  ;store rgb0
    nop                                 iblez vi03, TRI_STRIP_LIGHT_END                         ;exit if 0 verts
    nop                                 lq.xyzw vf01, 1(vi01)                                   ; load next vert
    nop                                 b TRI_STRIP_LIGHT_LOOP                                  ; start over
    nop                                 nop

TRI_STRIP_LIGHT_END:
    nop                                 iaddiu vi06, vi00, MATRIX_C2S_ADDR
    nop                                 lq.xyzw vf24,  8(vi06)              ; L2C
    nop                                 lq.xyzw vf25,  9(vi06)              ; L2C
    nop                                 lq.xyzw vf26, 10(vi06)              ; L2C
    nop                                 lq.xyzw vf27, 11(vi06)              ; L2C
    nop                                 jr vi15
    nop                                 nop


