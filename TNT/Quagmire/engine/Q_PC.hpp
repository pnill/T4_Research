///////////////////////////////////////////////////////////////////////////
//
//  Q_PC.HPP
//
///////////////////////////////////////////////////////////////////////////
#ifndef Q_PC_HPP
#define Q_PC_HPP

///////////////////////////////////////////////////////////////////////////
#include "d3d8.h"
#include "d3dx8.h"
#include "x_types.hpp"
#include "x_color.hpp"

typedef s32 (* message_fnptr) ( HWND hWnd, WORD Message, WPARAM  wParam, LPARAM  lParam);


///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
//
//  PC Engine functions
//
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////

void		ENG_SetBackgroundColor( color C );

HWND		ENG_GetHWND(void);
HINSTANCE	ENG_GetHINSTANCE(void);

void		ENG_SetMessageHandler(message_fnptr pfHandler);

LPDIRECT3DDEVICE8 PC_GetDevice();

s32  PC_RegisterVertexShader ( void* pVSCodeData, void* pVtxFmtData, u32 Flags = 0 );
void PC_ActivateVertexShader ( s32 ShaderID );
s32  PC_GetActiveVertexShader( void );

s32  PC_RegisterPixelShader ( void* pPSCodeData );
void PC_ActivatePixelShader ( s32 ShaderID );
void PC_DeActivatePixelShader ( s32 ShaderID );
s32  PC_GetActivePixelShader( void );

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
//
//  PC Specific PREP Functions
//
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
//
//  These calls prepare various engine internals before initialization.
//  Some preps are required for the engine to function.  Others are 
//  optional.
//
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
//
//  Miscellaneous PC Specific Functions
//
///////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// DEFINES
//////////////////////////////////////////////////////////////////////////
#define SAFE_RELEASE(p)      { if(p) { (p)->Release(); (p)=NULL; } }

#define	DXCHECK(hr)			{ if (hr<0) { VIDEO_Warning(hr, __FILE__, __LINE__); return ERR_FAILURE;} }
#define	DXWARN(hr)			{ if (hr<0) { VIDEO_Warning(hr, __FILE__, __LINE__);} }

//////////////////////////////////////////////////////////////////////////
// EXTERNS
//////////////////////////////////////////////////////////////////////////
extern LPDIRECT3D8             g_pD3D;		// Used to create the D3DDevice
extern LPDIRECT3DDEVICE8       g_pD3DDevice;	// Our rendering device

void VIDEO_Warning (HRESULT hr, char*pFile, u32 line);

///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
#endif
///////////////////////////////////////////////////////////////////////////
